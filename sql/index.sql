/*
Hello folks,

I've used dbdiagram for prototyping and runsql for creating the database and filling it with data for testing purposes.
Feel free to open up those links and check them out.

If you don't want you can run below provided script to create your local postgres database and fill it with data.

Used technologies:
Prototyping: https://dbdiagram.io/d/FaceUp-682755131227bdcb4ea8f6f0
Database: https://runsql.com/r/d14521ed689941da
*/



-- Here goes your script.
--- DB Creation ---
CREATE TYPE "enum_data_type" AS ENUM (
  'string',
  'integer',
  'decimal',
  'boolean'
);

CREATE TABLE "field_types" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(250) UNIQUE NOT NULL
);

CREATE TABLE "field_type_parameters" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "field_type_id" integer,
  "name" varchar(250) NOT NULL,
  "data_type" enum_data_type DEFAULT 'string',
  "required" bool NOT NULL DEFAULT 'false'
);

CREATE TABLE "forms" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(250) UNIQUE NOT NULL,
  "description" text
);

CREATE TABLE "form_fields" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "form_id" integer,
  "field_type_id" integer,
  "label" varchar(250) NOT NULL,
  "position" integer NOT NULL
);

CREATE TABLE "form_field_parameters" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "field_id" integer,
  "name" varchar(250) NOT NULL,
  "value" text NOT NULL
);

CREATE TABLE "form_field_options" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "field_id" integer,
  "value" text NOT NULL,
  "label" text NOT NULL
);

CREATE TABLE "form_submissions" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "form_id" integer,
  "submitted_at" timestamp DEFAULT (now())
);

CREATE TABLE "form_submission_answers" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "submission_id" integer,
  "field_id" integer,
  "answer" text NOT NULL
);

CREATE INDEX ON "form_fields" ("form_id");

CREATE INDEX ON "form_submissions" ("form_id");

CREATE INDEX ON "form_submission_answers" ("submission_id");

ALTER TABLE "field_type_parameters" ADD FOREIGN KEY ("field_type_id") REFERENCES "field_types" ("id") ON DELETE CASCADE;

ALTER TABLE "form_fields" ADD FOREIGN KEY ("form_id") REFERENCES "forms" ("id") ON DELETE CASCADE;

ALTER TABLE "form_fields" ADD FOREIGN KEY ("field_type_id") REFERENCES "field_types" ("id");

ALTER TABLE "form_field_parameters" ADD FOREIGN KEY ("field_id") REFERENCES "form_fields" ("id") ON DELETE CASCADE;

ALTER TABLE "form_field_options" ADD FOREIGN KEY ("field_id") REFERENCES "form_fields" ("id") ON DELETE CASCADE;

ALTER TABLE "form_submissions" ADD FOREIGN KEY ("form_id") REFERENCES "forms" ("id") ON DELETE CASCADE;

ALTER TABLE "form_submission_answers" ADD FOREIGN KEY ("submission_id") REFERENCES "form_submissions" ("id") ON DELETE CASCADE;

ALTER TABLE "form_submission_answers" ADD FOREIGN KEY ("field_id") REFERENCES "form_fields" ("id");


-- DB seed ---
INSERT INTO field_types (name) VALUES
('text'),
('select'),
('slider');

-- Insert parameters for "text"
INSERT INTO field_type_parameters (field_type_id, name, data_type, required)
VALUES
((SELECT id FROM field_types WHERE name = 'text'), 'min_length', 'integer', TRUE),
((SELECT id FROM field_types WHERE name = 'text'), 'max_length', 'integer', TRUE);

-- Insert parameters for "slider"
INSERT INTO field_type_parameters (field_type_id, name, data_type, required)
VALUES
((SELECT id FROM field_types WHERE name = 'slider'), 'start_value', 'integer', TRUE),
((SELECT id FROM field_types WHERE name = 'slider'), 'end_value', 'integer', TRUE),
((SELECT id FROM field_types WHERE name = 'slider'), 'step_size', 'integer', FALSE);

-- Insert parameter for "select"
INSERT INTO field_type_parameters (field_type_id, name, data_type, required)
VALUES
((SELECT id FROM field_types WHERE name = 'select'), 'multiple', 'boolean', FALSE);

-- Create a test form
INSERT INTO forms (name) VALUES ('Test Form');

-- Insert fields
-- Field 1: Text field
INSERT INTO form_fields (form_id, label, field_type_id, position)
VALUES (1, 'Your Name', (SELECT id FROM field_types WHERE name = 'text'), 1);

-- Field 2: Select field
INSERT INTO form_fields (form_id, label, field_type_id, position)
VALUES (1, 'Favorite Color', (SELECT id FROM field_types WHERE name = 'select'), 2);

-- Field 3: Slider field
INSERT INTO form_fields (form_id, label, field_type_id, position)
VALUES (1, 'Satisfaction', (SELECT id FROM field_types WHERE name = 'slider'), 3);

-- Parameters for text field
INSERT INTO form_field_parameters (field_id, name, value)
VALUES
(1, 'min_length', '2'),
(1, 'max_length', '30');

-- Parameters for slider field
INSERT INTO form_field_parameters (field_id, name, value)
VALUES
(3, 'start_value', '0'),
(3, 'end_value', '10'),
(3, 'step_size', '1');

-- Parameters for select field
INSERT INTO form_field_parameters (field_id, name, value)
VALUES
(2, 'multiple', 'false');

-- Options for select field
INSERT INTO form_field_options (field_id, value, label)
VALUES
(2, 'red', 'Red'),
(2, 'green', 'Green'),
(2, 'blue', 'Blue');

-- Queries --
-- answers for submission id 1
SELECT
  fsa.id AS answer_id,
  ff.label AS field_label,
  fft.name AS field_type,
  fsa.answer
FROM form_submission_answers fsa
JOIN form_fields ff ON fsa.field_id = ff.id
JOIN field_types fft ON ff.field_type_id = fft.id
WHERE fsa.submission_id = 1
ORDER BY ff.position;


-- answers for all submissions of one form
SELECT
  fs.id AS submission_id,
  fs.submitted_at,
  ff.label AS field_label,
  fft.name AS field_type,
  fsa.answer
FROM form_submissions fs
JOIN form_submission_answers fsa ON fs.id = fsa.submission_id
JOIN form_fields ff ON fsa.field_id = ff.id
JOIN field_types fft ON ff.field_type_id = fft.id
WHERE fs.form_id = 1
ORDER BY fs.id, ff.position;
